class Solution {
    public static ArrayList<Integer> topoSort(int V, int[][] edges) {
        
        int[] indeg=new int[V];
        Arrays.fill(indeg,0);
        for(int i=0;i<edges.length;i++){
            indeg[edges[i][1]]++;
        }
        Queue<Integer> q=new LinkedList<>();
        
        List<List<Integer>> adj=new ArrayList<>();
        for(int i=0;i<V;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<edges.length;i++){
            adj.get(edges[i][0]).add(edges[i][1]);
        }
        ArrayList<Integer> ans=new ArrayList<>();
       
        for(int i=0;i<V;i++){
            if(indeg[i]==0){
                q.offer(i);
            }
        }
        
        while(!q.isEmpty()){
            int node=q.poll();
            ans.add(node);
            for(Integer it:adj.get(node)){
                indeg[it]--;
                if(indeg[it]==0){
                    q.offer(it);
                }
            }
        }
        
        
        return ans;
    }
}
