/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static int path(TreeNode node,int[] max){
        if(node==null) return 0;

        int left=path(node.left,max);
        int right=path(node.right,max);

        max[0]=Math.max((left+right),max[0]);

        return Math.max(left,right)+1;
    }
    public int diameterOfBinaryTree(TreeNode root) {
        int[] max=new int[1];
        max[0]=0;
        int h=path(root,max);
        return max[0];
    }
}
