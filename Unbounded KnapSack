// User function Template for Java

class Solution {
    public static int maxp(int ind,int[] val,int[] wt,int W,int[][] dp) {
        if(ind==0){
            if(W>=wt[ind]) return val[ind]*(W/wt[ind]);
            else return 0;
        }
        if(dp[ind][W]!=-1) return dp[ind][W];
        int nottake=maxp(ind-1,val,wt,W,dp);
        int take=0;
        if(wt[ind]<=W){
            take=val[ind]+maxp(ind,val,wt,W-wt[ind],dp);
        }
        
        return dp[ind][W]=Math.max(nottake,take);
    }
    static int knapSack(int val[], int wt[], int capacity) {
        // code here
        int n=val.length;
        int[][] dp=new int[n][capacity+1];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return maxp(n-1,val,wt,capacity,dp);
    }
}
