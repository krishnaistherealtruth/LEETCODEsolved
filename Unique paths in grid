
#brute force approach(TLE)


class Solution {
    public static int solve(int i,int j,int m,int n){
        if(i==m && j==n){
            return 1;
        }
        if(i>m || j>n){
            return 0;
        }
        else{
            return solve(i+1,j,m,n)+solve(i,j+1,m,n);
        }
    }
    public int uniquePaths(int m, int n) {
        
        /*int[][] dp=new int[m][n];
        for(int i=0;i<m;i++){
            Arrays.fill(dp[i],-1);
        }
        int[] couint=new int[1];*/
        return solve(0,0,m-1,n-1);
    }
}




# Dynamic programed

class Solution {
    public static int solve(int i,int j,int m,int n,int[][] dp){
        if(i==m && j==n){
            return 1;
        }
        if(i>m || j>n){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        else{
            return dp[i][j]=solve(i+1,j,m,n,dp)+solve(i,j+1,m,n,dp);
        }
    }
    public int uniquePaths(int m, int n) {
        
        int[][] dp=new int[m][n];
        for(int i=0;i<m;i++){
            Arrays.fill(dp[i],-1);
        }
        return solve(0,0,m-1,n-1,dp);
    }
}
