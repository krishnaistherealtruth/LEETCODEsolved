/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq=new PriorityQueue<>(Comparator.comparingInt(node->node.val));

        for(ListNode node:lists){
                if(node!=null){
                    pq.add(node);
                }
        }
        ListNode newhead=new ListNode(-1);
        ListNode temp=newhead;

        while(!pq.isEmpty()){
            ListNode newnode=pq.poll();
            temp.next=newnode;
            temp=temp.next;

            if(newnode.next!=null){
                pq.add(newnode.next);
            }
        }
        return newhead.next;
    }
}
