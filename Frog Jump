// User function Template for Java
class Solution {
    int min(int[] height,int n,int[] dp){
        if(n==0) return 0;
        
        if(dp[n]!=-1) return dp[n];
        
        int left=min(height,n-1,dp)+Math.abs(height[n]-height[n-1]);
        int right=Integer.MAX_VALUE;
        if(n>1){
           right=min(height,n-2,dp)+Math.abs(height[n]-height[n-2]);
        }
       
        dp[n]=Math.min(left,right);
        
        return dp[n];
    }
    int minCost(int[] height) {
        // code here
        int[] dp=new int[height.length];
        Arrays.fill(dp,-1);
        return min(height,height.length-1,dp);
        
    }
}
