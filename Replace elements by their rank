// User function Template for Java

class Solution {
    public static void maxheapify(int root,int[] arr,int len){
        int l=(root*2)+1;
        int r=(root*2)+2;
        int max=root;
        
        if(l<len && arr[l]>arr[max]) max=l;
        if(r<len && arr[r]>arr[max]) max=r;
        
        if(max!=root){
            int temp=arr[max];
            arr[max]=arr[root];
            arr[root]=temp;
            maxheapify(max,arr,len);
        }
    }
    static int[] replaceWithRank(int arr[], int N) {
        // code here
         Map<Integer,Integer> map=new HashMap<>();
         int[] copy=new int[N];
         for(int i=0;i<N;i++){
             copy[i]=arr[i];
         }
        
        
        for(int i=(N/2)-1;i>=0;i--){
            maxheapify(i,arr,N);
        }
        
        for(int i=N-1;i>=0;i--){
            int temp=arr[0];
            arr[0]=arr[i];
            arr[i]=temp;
            
            maxheapify(0,arr,i);
        }
        int rank=1;
        for(int i=0;i<N;i++){
            if(!map.containsKey(arr[i])){
                map.put(arr[i],rank++);
            }
        }
        int[] ans=new int[N];
        for(int i=0;i<N;i++){
            ans[i]=map.get(copy[i]);
        }
        return ans;
    }
}
