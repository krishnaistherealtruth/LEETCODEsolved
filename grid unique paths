class Solution {
    public static int memo(int n,int m,int[][] dp, int[][] grid){
        if(grid[n][m]==1) return 0;
        
        if(n==0 && m==0) return 1;
        
        if(n<0 || m<0) return 0;
        
        if(dp[n][m]!=-1) return dp[n][m];
        
        int left=0;
        int up=0;
        if(m-1>=0 && grid[n][m-1]!=1){
            left=memo(n,m-1,dp,grid);
        }
        if(n-1>=0 && grid[n-1][m]!=1){
            up=memo(n-1,m,dp,grid);
        }
        dp[n][m]=left+up;
        return dp[n][m];
    }
    public int uniquePaths(int[][] grid) {
        // code here
        int n=grid.length;
        int m=grid[0].length;
        int[][] dp=new int[n][m];
        
        for(int[] rows:dp){
            Arrays.fill(rows,-1);
        }
        
        return memo(n-1,m-1,dp,grid);
    }
};
