/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans=new ArrayList<>();
        if(root==null) return ans;
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        boolean flag=true;

        while(!q.isEmpty()){
            int len=q.size();
            List<Integer> temp=new ArrayList<>();
            int[] arr=new int[len];

            for(int i=0;i<len;i++){
                TreeNode node=q.poll();
            
                int ind=(flag)?i:(len-1-i);

                arr[ind]=node.val;
                if(node.left!=null){
                    q.offer(node.left);
                }
                if(node.right!=null){
                    q.offer(node.right);
                }
                
            }
            flag=!flag;
            for(int i=0;i<len;i++){
                temp.add(arr[i]);
            }
            ans.add(temp);
        }
        return ans;
    }
}
